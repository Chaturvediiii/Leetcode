Using stack - FILO DS
int pairSum(ListNode* head) {
        // FILO
        stack <int> st;

        ListNode* slow = head;
        ListNode* fast = head;

        while(fast){
            st.push(slow->val);
            slow = slow->next;
            fast = fast->next->next;
        }

        int ans = INT_MIN;

        while(slow){
            int temp = st.top() + slow->val;
            ans = max(temp,ans);
            slow = slow->next;
            st.pop();
        }
        return ans;
    }


Using Array
vector <int> ans;
        int maxi = INT_MIN;

        ListNode* temp = head;

        while(temp){
            ans.push_back(temp->val);
            temp = temp->next;
        }

        int start = 0;
        int end = ans.size() - 1;

        while(end>start){
            int sum = ans[start] + ans[end];
            start++;
            end--;
            maxi = max(sum,maxi);
        }
        return maxi;
