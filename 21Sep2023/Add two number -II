
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        stack <int> st1,st2;

        while(l1){
            st1.push(l1->val);
            l1=l1->next;
        }
        while(l2){
            st2.push(l2->val);
            l2=l2->next;
        }

        ListNode* result = NULL;

        int carry = 0;
        while(!st1.empty() || !st2.empty() || carry){
            int digit1 = !st1.empty() ? st1.top() : 0;
            int digit2 = !st2.empty() ? st2.top() : 0;

            int sum = carry + digit1 + digit2;
            carry = sum / 10;
            int digit = sum % 10;
            ListNode* node = new ListNode(digit);
            node->next = result;
            result = node;
            if(!st1.empty()) st1.pop();
            if(!st2.empty()) st2.pop();
        }
        return result;
    }
};
